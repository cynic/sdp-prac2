/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package sdp.prac2;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    /*    @Test
    public void testTask2() {
        // Arrange: create input and expected output
        String[] input = {"apple", "banana", "car", "", "dog"};
        String[] expectedOutput = {"pple", "anana", "ar", "og"};

        // Act: call the Task2 method and get the actual output
        String[] actualOutput = Task2(input);

        // Assert: check that the actual output matches the expected output
        assertArrayEquals(expectedOutput, actualOutput);
    }
    
    @Test
    public void testTask2_emptyInput() {
        // Arrange: create empty input and expected output
        String[] input = {};
        String[] expectedOutput = {};

        // Act: call the Task2 method and get the actual output
        String[] actualOutput = Task2(input);

        // Assert: check that the actual output matches the expected output
        assertArrayEquals(expectedOutput, actualOutput);
    }
    
    @Test
    public void testTask2_allShortInput() {
        // Arrange: create input with only short strings and expected output
        String[] input = {"a", "b", "c"};
        String[] expectedOutput = {};

        // Act: call the Task2 method and get the actual output
        String[] actualOutput = Task2(input);

        // Assert: check that the actual output matches the expected output
        assertArrayEquals(expectedOutput, actualOutput);
    }
    
    @Test
    public void testTask2_allLongInput() {
        // Arrange: create input with only long strings and expected output
        String[] input = {"apple", "banana", "carrot"};
        String[] expectedOutput = {"pple", "anana", "arrot"};

        // Act: call the Task2 method and get the actual output
        String[] actualOutput = Task2(input);

        // Assert: check that the actual output matches the expected output
        assertArrayEquals(expectedOutput, actualOutput);
    } */
}
